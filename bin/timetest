#!/usr/bin/env bash

: "${t:=10}"

# "cache" so the "first" run isn't a lot slower than all the next ones
#{ time "$@"; } >/dev/null 2>&1
i=0 avg=0 high=0 low=99999
while [ "$i" -lt "$t" ]; do
	i=$((i+1))
	#printf "\r%s" "$i" >/dev/stderr

	var=$( { time "$@"; } 2>&1 )
	var=${var##*real	}
	var=${var//[m.]}
	var=${var%%s*}

	# remove leading zeros
	var=$(( 10#$var ))

	avg=$(( avg + var ))
	[ "$var" -gt "$high" ] && high=$var
	[ "$var" -lt "$low" ] && low=$var
	# wait so the times are more consistent and accurate to real-world usage
	#sleep 0.5
done

#echo -e "\r$avg | $((avg/t)) | $*"
a=-${#high}; [ $a -ge -4 ] && a=-4
printf "\r%${a}s  %${a}s  %${a}s\n"  avg high low
printf "\r%${a}s  %${a}s  %${a}s\n" "$((avg/t))" "$high" "$low"
